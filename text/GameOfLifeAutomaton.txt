package automata;
import sample.model.AbstractAutomaton;
import sample.model.Callable;
public class Automata extends AbstractAutomaton {
private final static int rows = 30;
private final static int columns = 50;
private final static int numberOfStates = 2;
private final static boolean isTorus = false;

    public Automata() {
        super(rows, columns, numberOfStates, isTorus);
    }

    @Override
    public Cell transform(Cell cell, Cell[] neighbors) {
        int numberOfNeighbors = 0;
        for (Cell neighbor : neighbors) {
            if (neighbor.getState() == 1) {
                numberOfNeighbors++;
            }
        }
        if (cell.getState() == 0) {
            if (numberOfNeighbors == 3) {
                return new Cell(1);
            } else {
                return new Cell(cell);
            }
        } else {
            if (numberOfNeighbors < 2 || numberOfNeighbors > 3) {
                return new Cell(0);
            } else {
                return new Cell(cell);
            }
        }
    }

        @Callable
        public void setGlier(int row) {
            System.out.println("huhu ");
        }
}
